{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\n1k0m\\\\Documents\\\\Pankki\\\\frontend\\\\src\\\\pages\\\\twofactorverification.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useAuth } from '../context/authcontext'; // Adjust the path as needed\nimport { useNavigate } from 'react-router-dom';\nimport authService from '../services/authservice'; // Adjust the path as needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TwoFAVerification() {\n  _s();\n  const [code, setCode] = useState('');\n  const {\n    setIsLoggedIn,\n    setIs2FAVerified\n  } = useAuth();\n  const navigate = useNavigate();\n  const handleVerify = async e => {\n    e.preventDefault();\n    try {\n      // Assuming you have a verify2FACode function in your authService\n      await authService.verify2FACode(code);\n      setIsLoggedIn(true);\n      setIs2FAVerified(true);\n      localStorage.setItem('is2FAVerified', 'true');\n      navigate('/profile'); // Redirect to profile page or dashboard\n    } catch (error) {\n      console.error(\"2FA Verification failed:\", error);\n      // Handle verification failure\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Two-Factor Authentication\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleVerify,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter 2FA Code\",\n        value: code,\n        onChange: e => setCode(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Verify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(TwoFAVerification, \"jiBgqozSv/LrKS1OVtbjhPcHW9Q=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = TwoFAVerification;\nexport default TwoFAVerification;\nvar _c;\n$RefreshReg$(_c, \"TwoFAVerification\");","map":{"version":3,"names":["React","useState","useAuth","useNavigate","authService","jsxDEV","_jsxDEV","TwoFAVerification","_s","code","setCode","setIsLoggedIn","setIs2FAVerified","navigate","handleVerify","e","preventDefault","verify2FACode","localStorage","setItem","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/n1k0m/Documents/Pankki/frontend/src/pages/twofactorverification.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useAuth } from '../context/authcontext'; // Adjust the path as needed\r\nimport { useNavigate } from 'react-router-dom';\r\nimport authService from '../services/authservice'; // Adjust the path as needed\r\n\r\nfunction TwoFAVerification() {\r\n  const [code, setCode] = useState('');\r\n  const { setIsLoggedIn, setIs2FAVerified } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  const handleVerify = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      // Assuming you have a verify2FACode function in your authService\r\n      await authService.verify2FACode(code);\r\n      setIsLoggedIn(true);\r\n      setIs2FAVerified(true);\r\n      localStorage.setItem('is2FAVerified', 'true');\r\n      navigate('/profile'); // Redirect to profile page or dashboard\r\n    } catch (error) {\r\n      console.error(\"2FA Verification failed:\", error);\r\n      // Handle verification failure\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Two-Factor Authentication</h2>\r\n      <form onSubmit={handleVerify}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter 2FA Code\"\r\n          value={code}\r\n          onChange={(e) => setCode(e.target.value)}\r\n        />\r\n        <button type=\"submit\">Verify</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TwoFAVerification;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,OAAO,QAAQ,wBAAwB,CAAC,CAAC;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,WAAW,MAAM,yBAAyB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EAC3B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM;IAAEU,aAAa;IAAEC;EAAiB,CAAC,GAAGV,OAAO,CAAC,CAAC;EACrD,MAAMW,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9B,MAAMW,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF;MACA,MAAMZ,WAAW,CAACa,aAAa,CAACR,IAAI,CAAC;MACrCE,aAAa,CAAC,IAAI,CAAC;MACnBC,gBAAgB,CAAC,IAAI,CAAC;MACtBM,YAAY,CAACC,OAAO,CAAC,eAAe,EAAE,MAAM,CAAC;MAC7CN,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;IACxB,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD;IACF;EACF,CAAC;EAED,oBACEd,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClCpB,OAAA;MAAMqB,QAAQ,EAAEb,YAAa;MAAAQ,QAAA,gBAC3BhB,OAAA;QACEsB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,gBAAgB;QAC5BC,KAAK,EAAErB,IAAK;QACZsB,QAAQ,EAAGhB,CAAC,IAAKL,OAAO,CAACK,CAAC,CAACiB,MAAM,CAACF,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC,eACFpB,OAAA;QAAQsB,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAAClB,EAAA,CAlCQD,iBAAiB;EAAA,QAEoBL,OAAO,EAClCC,WAAW;AAAA;AAAA8B,EAAA,GAHrB1B,iBAAiB;AAoC1B,eAAeA,iBAAiB;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}