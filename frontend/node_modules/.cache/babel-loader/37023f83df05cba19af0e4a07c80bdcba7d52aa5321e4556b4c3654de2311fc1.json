{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\n1k0m\\\\Documents\\\\Pankki\\\\frontend\\\\src\\\\components\\\\logincontrol.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport authService from '../services/authservice';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../context/authcontext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Logging() {\n  _s();\n  const {\n    isLoggedIn,\n    setIsLoggedIn\n  } = useAuth();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(''); // To store login errors\n  const navigate = useNavigate();\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      const initialResponse = await authService.initialLogin(username, password);\n      if (initialResponse.status === '2FA_required') {\n        // Prompt for 2FA code\n        const code = prompt(\"Enter your 2FA code:\"); // Consider replacing with a more secure method\n        const finalResponse = await authService.verify2FACode(initialResponse.user_id, code);\n        // Process successful login with finalResponse.token\n      } else {\n        // Process successful login without needing 2FA\n      }\n    } catch (error) {\n      console.error(\"Login error:\", error);\n      // Handle error\n    }\n  };\n  const verify2FACode = async code => {\n    const user_id = sessionStorage.getItem('tempUserId');\n    try {\n      const response = await authService.verify2FACode(user_id, code);\n      if (response.token) {\n        // Login successful\n        localStorage.setItem('userToken', response.token);\n        setIsLoggedIn(true);\n        navigate('/user-profile');\n      }\n    } catch (error) {\n      console.error(\"2FA verification failed:\", error);\n      // Handle error\n    }\n  };\n  const handleLogout = async () => {\n    await authService.logout();\n    setIsLoggedIn(false);\n    localStorage.removeItem('userToken'); // Ensure token is removed on logout\n    navigate('/home'); // Navigate to home page on logout\n  };\n\n  // Use the form's onSubmit for the login process\n  const loginForm = /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'absolute',\n      top: '5px',\n      right: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-messages\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n  const logoutButton = /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'absolute',\n      top: '10px',\n      right: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n  return isLoggedIn ? logoutButton : loginForm;\n}\n_s(Logging, \"sJjI6dlNnu2GZsUXZp/NSpWAk0w=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = Logging;\nexport default Logging;\nvar _c;\n$RefreshReg$(_c, \"Logging\");","map":{"version":3,"names":["React","useState","authService","useNavigate","useAuth","jsxDEV","_jsxDEV","Logging","_s","isLoggedIn","setIsLoggedIn","username","setUsername","password","setPassword","error","setError","navigate","handleLogin","e","preventDefault","initialResponse","initialLogin","status","code","prompt","finalResponse","verify2FACode","user_id","console","sessionStorage","getItem","response","token","localStorage","setItem","handleLogout","logout","removeItem","loginForm","style","position","top","right","children","onSubmit","type","name","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","className","logoutButton","onClick","_c","$RefreshReg$"],"sources":["C:/Users/n1k0m/Documents/Pankki/frontend/src/components/logincontrol.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport authService from '../services/authservice';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../context/authcontext';\r\n\r\nfunction Logging() {\r\n  const { isLoggedIn, setIsLoggedIn } = useAuth();\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState(''); // To store login errors\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const initialResponse = await authService.initialLogin(username, password);\r\n      if (initialResponse.status === '2FA_required') {\r\n        // Prompt for 2FA code\r\n        const code = prompt(\"Enter your 2FA code:\"); // Consider replacing with a more secure method\r\n        const finalResponse = await authService.verify2FACode(initialResponse.user_id, code);\r\n        // Process successful login with finalResponse.token\r\n      } else {\r\n        // Process successful login without needing 2FA\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Login error:\", error);\r\n      // Handle error\r\n    }\r\n  };\r\n\r\nconst verify2FACode = async (code) => {\r\n  const user_id = sessionStorage.getItem('tempUserId');\r\n  try {\r\n    const response = await authService.verify2FACode(user_id, code);\r\n    if (response.token) {\r\n      // Login successful\r\n      localStorage.setItem('userToken', response.token);\r\n      setIsLoggedIn(true);\r\n      navigate('/user-profile');\r\n    }\r\n  } catch (error) {\r\n    console.error(\"2FA verification failed:\", error);\r\n    // Handle error\r\n  }\r\n};\r\n\r\n  const handleLogout = async () => {\r\n    await authService.logout(); \r\n    setIsLoggedIn(false);\r\n    localStorage.removeItem('userToken'); // Ensure token is removed on logout\r\n    navigate('/home'); // Navigate to home page on logout\r\n  };\r\n\r\n  // Use the form's onSubmit for the login process\r\n  const loginForm = (\r\n    <div style={{ position: 'absolute', top: '5px', right: '20px' }}>\r\n      <form onSubmit={handleLogin}> \r\n        <input\r\n          type=\"text\"\r\n          name=\"username\"\r\n          placeholder=\"Username\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <button type=\"submit\">Login</button> {/* Change to type=\"submit\" */}\r\n      </form>\r\n      {error && <div className=\"error-messages\">{error}</div>}\r\n    </div>\r\n  );\r\n\r\n  const logoutButton = (\r\n    <div style={{ position: 'absolute', top: '10px', right: '20px' }}>\r\n      <button onClick={handleLogout}>Logout</button> {/* Corrected for logout */}\r\n    </div>\r\n  );\r\n\r\n  return isLoggedIn ? logoutButton : loginForm;\r\n}\r\n\r\nexport default Logging;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}